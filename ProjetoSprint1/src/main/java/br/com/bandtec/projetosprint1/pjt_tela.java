/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projetosprint1;

import java.util.concurrent.ThreadLocalRandom;

/**
 *
 * @author Aluno
 */
public class pjt_tela extends javax.swing.JFrame {

    /**
     * Creates new form pjt_tela
     */
    public pjt_tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        progress1 = new javax.swing.JProgressBar();
        progress2 = new javax.swing.JProgressBar();
        progress3 = new javax.swing.JProgressBar();
        btGerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        randomCpu = new javax.swing.JLabel();
        randomDisco = new javax.swing.JLabel();
        randomMemo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbcpuMin = new javax.swing.JLabel();
        lbdiscoMin = new javax.swing.JLabel();
        lbmemoMin = new javax.swing.JLabel();
        lbcpuMax = new javax.swing.JLabel();
        lbdiscoMax = new javax.swing.JLabel();
        lbmemoMax = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbdiscoMedia = new javax.swing.JLabel();
        lbmemoMedia = new javax.swing.JLabel();
        lbcpuMedia = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btGerar.setText("Fazer Leitura de Dados");
        btGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarActionPerformed(evt);
            }
        });

        jLabel1.setText("Memoria");

        jLabel2.setText("Disco");

        jLabel3.setText("CPU");

        randomCpu.setText("0000");

        randomDisco.setText("0000");

        randomMemo.setText("0000");

        jLabel4.setText("CPU");

        jLabel5.setText("Disco");

        jLabel6.setText("Memoria");

        lbcpuMin.setText("Min");

        lbdiscoMin.setText("Min");

        lbmemoMin.setText("Min");

        lbcpuMax.setText("Max");

        lbdiscoMax.setText("Max");

        lbmemoMax.setText("Max");

        lbdiscoMedia.setText("Media");

        lbmemoMedia.setText("Media");

        lbcpuMedia.setText("Media");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbcpuMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))
                            .addComponent(btGerar)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbcpuMax)
                                    .addComponent(jLabel4)
                                    .addComponent(lbcpuMin))
                                .addGap(92, 92, 92)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(lbdiscoMax)
                                    .addComponent(lbdiscoMin)
                                    .addComponent(lbdiscoMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(progress3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(randomMemo))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(progress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(randomDisco))
                                        .addComponent(progress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(randomCpu))))))
                        .addGap(76, 76, 76)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbmemoMax)
                    .addComponent(lbmemoMin)
                    .addComponent(jLabel6)
                    .addComponent(lbmemoMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(randomCpu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(randomDisco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(randomMemo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btGerar)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbcpuMin)
                    .addComponent(lbdiscoMin)
                    .addComponent(lbmemoMin))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbcpuMax)
                    .addComponent(lbdiscoMax)
                    .addComponent(lbmemoMax))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(lbdiscoMedia)
                        .addComponent(lbmemoMedia))
                    .addComponent(lbcpuMedia, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
//    criação da váriavel global contador e das demais globais (Double), guardam os valores 
        Integer contador = 0;
        
        Double cpuMax = 0.0;
        Double cpuMin = 0.0;
        Double cpuMedia = 0.0;
        
        Double discoMax = 0.0;
        Double discoMin = 0.0;
        Double discoMedia = 0.0;
        
        Double memoMax = 0.0;
        Double memoMin = 0.0;
        Double memoMedia = 0.0;
    
    private void btGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarActionPerformed
//     Criação das barras de progresso e seus valores max e min
       progress1.setMinimum(0);
       progress1.setMaximum(2400);
       
       progress2.setMinimum(0);
       progress2.setMaximum(200000);
       
       progress3.setMinimum(0);
       progress3.setMaximum(8000);
       
//     Definindo a aleatoriedade com ThreadRandom
       Integer valorCpu = ThreadLocalRandom.current().nextInt(0,2400);
       Integer valorDisco = ThreadLocalRandom.current().nextInt(0,200000);
       Integer valorMemo = ThreadLocalRandom.current().nextInt(0,8000);
       
//     Puxando os valores integer para double (convertendo)
       Double valorCpu2 = Double.valueOf(valorCpu);
       Double valorDisco2 = Double.valueOf(valorDisco);
       Double valorMemo2 = Double.valueOf(valorMemo);
       
//     Alteração do valor da barra, para o valor gerado
       progress1.setValue(valorCpu);
       progress2.setValue(valorDisco);
       progress3.setValue(valorMemo);
       
//     Convertendo de MGhz para GHz e MB para GB (maior leque de variações)
       Double cpuConver = valorCpu2/1000;
       Double discoConver = valorDisco2/1000;
       Double memoConver = valorMemo2/1000;
       
//     Visualização nas barras
       String cpuTxt = String.format("%.2fGHz",cpuConver);
       randomCpu.setText(cpuTxt);
       
       String discoTxt = String.format("%.2fGB",discoConver);
       randomDisco.setText(discoTxt);
       
       String memoTxt = String.format("%.2fGB",memoConver);
       randomMemo.setText(memoTxt);
       
//     Contador guarda a quantidade de vezes apertada
       contador++;
//     Cálculo da média das váriaveis
       cpuMedia = (cpuMedia + cpuConver);
       Double realCpumedia = cpuMedia /contador;
       discoMedia = (discoMedia + discoConver);
       Double realDiscomedia = discoMedia /contador;
       memoMedia = (memoMedia + memoConver);
       Double realMemomedia = memoMedia /contador;
       
//     visualização de baixo das médias
       lbcpuMedia.setText("media:"+String.format("%.2fGHz",realCpumedia)); 
       lbdiscoMedia.setText("media:"+String.format("%.2fGB",realDiscomedia)); 
       lbmemoMedia.setText("media:"+String.format("%.2fGB",realMemomedia)); 
       
//     Defiinição dos Max e Min
       if (cpuConver < cpuMin || cpuMin == 0){
           cpuMin = cpuConver;
           lbcpuMin.setText("Min:"+String.format("%.2fGhz", cpuMin));
       }
       
       if (cpuConver > cpuMax){
           cpuMax = cpuConver;
           lbcpuMax.setText("Max:"+String.format("%.2fGhz", cpuMax));
       }
       
        if (discoConver < discoMin || discoMin == 0){
           discoMin = discoConver;
           lbdiscoMin.setText("Min:"+String.format("%.2fGB", discoMin));
       }
       
       if (discoConver > discoMax){
           discoMax = discoConver;
           lbdiscoMax.setText("Max:"+String.format("%.2fGB", discoMax));
       }
       
        if (memoConver < memoMin || memoMin == 0){
           memoMin = memoConver;
           lbmemoMin.setText("Min:"+String.format("%.2fGB", memoMin));
       }
       
       if (memoConver > memoMax){
           memoMax = memoConver;
           lbmemoMax.setText("Max:"+String.format("%.2fGB", memoMax));
       }
       
       
       
       
       
       
       
       
       
  
               
    }//GEN-LAST:event_btGerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pjt_tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pjt_tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pjt_tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pjt_tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pjt_tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lbcpuMax;
    private javax.swing.JLabel lbcpuMedia;
    private javax.swing.JLabel lbcpuMin;
    private javax.swing.JLabel lbdiscoMax;
    private javax.swing.JLabel lbdiscoMedia;
    private javax.swing.JLabel lbdiscoMin;
    private javax.swing.JLabel lbmemoMax;
    private javax.swing.JLabel lbmemoMedia;
    private javax.swing.JLabel lbmemoMin;
    private javax.swing.JProgressBar progress1;
    private javax.swing.JProgressBar progress2;
    private javax.swing.JProgressBar progress3;
    private javax.swing.JLabel randomCpu;
    private javax.swing.JLabel randomDisco;
    private javax.swing.JLabel randomMemo;
    // End of variables declaration//GEN-END:variables
}
